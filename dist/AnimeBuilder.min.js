parcelRequire=function(e,r,n,t){var i="function"==typeof parcelRequire&&parcelRequire,o="function"==typeof require&&require;function u(n,t){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!t&&f)return f(n,!0);if(i)return i(n,!0);if(o&&"string"==typeof n)return o(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[n][1][r]||r},p.cache={};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,p,l,l.exports,this)}return r[n].exports;function p(e){return u(p.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=i,u.register=function(r,n){e[r]=[function(e,r){r.exports=n},{}]};for(var f=0;f<n.length;f++)u(n[f]);if(n.length){var c=u(n[n.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=c:"function"==typeof define&&define.amd?define(function(){return c}):t&&(this[t]=c)}return u}({"RPpU":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var t=r(require("animejs"));function r(t){return t&&t.__esModule?t:{default:t}}class e{constructor(t={}){this.animeRules={animeBuilderId:!0},this.animeConfig=t,this.totalDuration=0,this.tempDur=0,this.propDurationMap=new Map,this.DEFAULT_VALUES={scaleX:1,scaleY:1}}add(t){for(let[r,e]of Object.entries(t)){let t=this._getDurationDiff(r);if(t>0&&(this._addPlaceholderProp(r,t),this._addToPropDurMap(r,t)),this.animeRules.hasOwnProperty(r))e.forEach(t=>{this.animeRules[r].push(t),this._addToPropDurMap(r,t.duration)});else{this.animeRules[r]=e.slice(0);let t=this._getDurationPropValSum(e.slice(0));this._addToPropDurMap(r,t)}}return this.totalDuration=this._getHighestDurFromMap(this.propDurationMap),this}_calcDurSum(t){return this.animeRules[t].reduce((t,r)=>{return{duration:(t.duration?t.duration:0)+(r.duration?r.duration:0)}},0).duration}_getCurrentDuration(t){return this.propDurationMap.has(t)?this.propDurationMap.get(t):0}_getDurationPropValSum(t){return t.reduce((r,e)=>{if(null==!r.duration||null==!e.duration)throw new Error(`All propvals must have a duration. Propvals: ${t}`);return{duration:r.duration+e.duration}},{duration:0}).duration}_getDurationDiff(t){let r=this.totalDuration-this._getCurrentDuration(t);if(r<0)throw new Error(`Property ${t} has a negitive duration difference, which is not allowed. Please check all added property durations`);return r}_addPlaceholderProp(t,r){null==this.animeRules[t]&&(this.animeRules[t]=[]),this.animeRules[t].push({value:"*=1",duration:r})}_checkSumEquality(t){let r=-1;for(let[e,i]of Object.entries(t))if(r<0)r=this._getDurationPropValSum(i);else if(r!==this._getDurationPropValSum(i))return!1;return!0}_getHighestDurFromMap(t){let r=0;for(let e of t.values())e>r&&(r=e);return r}_updatePropDurMap(t){if(!t)throw new Error(`Property ${t} is undefined`);let r=this._calcDurSum(t);r>this.tempDur&&(this.tempDur=r),this._addToPropDurMap(t,r)}_addToPropDurMap(t,r){this.propDurationMap.has(t)?this.propDurationMap.set(t,this.propDurationMap.get(t)+r):this.propDurationMap.set(t,r)}onUpdate(t){return this.animeConfig.update=t,this}extractAnimeRules(){return this.animeRules}getDefaultValues(){return this.DEFAULT_VALUES}getDefaultValue(t){return this.DEFAULT_VALUES[t]?this.DEFAULT_VALUES[t]:0}generateAnime(){return(0,t.default)(Object.assign(this.animeConfig,this.animeRules))}}exports.default=e;
},{}]},{},["RPpU"], "AnimeBuilder")
//# sourceMappingURL=/AnimeBuilder.min.map